*cfi.txt*

Author:
  tyru <tyru.exe@gmail.com>
Version: 0.0.5
License:
NEW BSD LICENSE {{{
  Copyright (c) 2010, tyru
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

      * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
      * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
      * Neither the name of the tyru nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
}}}

==============================================================================
CONTENTS						*cfi-contents*

Introduction		|cfi-introduction|
Interface			|cfi-interface|
  Functions			|cfi-functions|
  Variables			|cfi-variables|
    PHP				|cfi-lang-php|
    JavaScript			|cfi-lang-javascript|
Changelog			|cfi-changelog|
Thanks				|cfi-thanks|


==============================================================================
INTRODUCTION						*cfi-introduction* {{{

current-func-info shows current function's name to statusline, tabline,
anywhere.
|cfi#get_func_name()| to get function's name.

}}}
==============================================================================
INTERFACE				*cfi-interface* {{{
------------------------------------------------------------------------------
FUNCTIONS					*cfi-functions* {{{


cfi#load()				*cfi#load()*
	Load "autoload/cfi.vim" and "plugin/cfi.vim".

cfi#get_func_name([{filetype}])				*cfi#get_func_name()*
	Returns function's name.
	If {filetype} is omitted, current 'filetype' is used instead.
	Include this expression to |'statusline'| or |'tabline'| and so on.

cfi#format({fmt}, {default})			*cfi#format()*
	Returns formatted string. >
    let &statusline = '%{cfi#format("[%s()]", "no function")}'
<	This returns "no function" if cfi#get_func_name() returns empty string.
	Or returns "[func()]" if cfi#get_func_name() returns "func".

cfi#create_finder({filetype})				*cfi#create_finder()*
	Returns Dictionary of instance for finder.

	To create finder, implement |s:finder.find()| or
	implement |s:finder.get_func_name()|, |s:finder.find_begin()|,
	|s:finder.find_end()|.

	(TODO: Write more descriptions)

	See ftplugin/*.vim for the details.

cfi#supported_filetype({filetype})				*cfi#supported_filetype()*
cfi#supported_filetypes({filetype})				*cfi#supported_filetypes()*
	Return boolean value if {filetype} is supported.
	If {filetype} is dot-separeted,
	return true if all filetypes are supported.

}}}
------------------------------------------------------------------------------
VARIABLES					*cfi-variables* {{{

g:cfi_disable					*g:cfi_disable*
	If true, disable all features and ftplugins.

g:loaded_cfi_ftplugin_{lang}	*g:loaded_cfi_ftplugin*
	If true, disable the load of ftplugin/{lang}/cfi.vim


PHP                                      *cfi-lang-php*
------

g:cfi_php_show_params			*g:cfi_php_show_params*
							(Default: 0)
	Include arguments to |cfi#get_func_name()|'s return value.


JavaScript                                      *cfi-lang-javascript*
-----

g:cfi_javascript_show                   *g:cfi_javascript_show*

	Configure the javascript function display. Include the keys you want
	and set them to 0 to disable their display.
	Defaults to showing everything.

>
  let g:cfi_javascript_show = {
	\   'assignment': 0,
	\   'variable_name': 0,
	\   'function_type': 0,
	\   'function_name': 0,
	\   'function_arguments': 0,
	\   'function_body': 0,
	\ }
<

}}}
}}}
==============================================================================
CHANGELOG						*cfi-changelog* {{{

0.0.0:
- Initial upload
0.0.1:
- Fix bug: couldn't get the name of last function in a file.
0.0.2:
- Implement cfi#format()
- Implement Python support
0.0.3:
- Fix bug: Ruby ftplugin did not work.
0.0.4:
- Include PHP support. Thanks Chris Ruzin.
0.0.5:
- Fix the flickering of c ftplugin
- Add variables g:cfi_disable, g:loaded_cfi_ftplugin_{lang}.

}}}
==============================================================================
Thanks						*cfi-thanks* {{{

- athom

}}}
==============================================================================
vim:tw=78:fo=tcq2mM:ts=4:ft=help:norl:noet:fdm=marker:fen
