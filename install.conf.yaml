- defaults:
    link:
      create: true
      relink: true

- clean: ['~', '~/.config']

# TODO more idiomatic way?
# TODO TODO and is this actually what i want? alter dotbot linking / relinking /
# link creation logic to just do this automatically / or with flag?
# (now it just fails, right?)
- shell:
  -
    command: "if [ ! -L ~/.bashrc ]; then rm -i ~/.bashrc; fi"
    stdout: True
    stderr: True
    stdin: True
  -
    command: "if [ ! -L ~/.profile ]; then rm -i ~/.profile; fi"
    stdout: True
    stderr: True
    stdin: True

# TODO shortcut (just link all according to some convention?)
- link: 
    ~/.bashrc:
    ~/.bash_aliases:
    ~/.variables:
    ~/.profile:
    ~/.inputrc:
    ~/.vimrc:
    ~/.vim:
    ~/.tmux.conf:
    ~/.gitconfig:
    ~/.gitignore:
    ~/.config/LibreCAD:
    ~/.config/inkscape:
    ~/.direnvrc:
    # TODO automatically "direnv allow" this
    ~/.envrc:
    # TODO some way to toggle this between base default enabled / not.
    # probably copy rather than link, to keep changes out of version control.
    ~/.condarc:
    # TODO if install normally run as root, check owner of link is not root
    # Even though the link seems to have 777 permissions, that doesn't seem to
    # matter, I guess as long as the target's permissions are correct?
    # Or the config perms actually don't matter?
    ~/.ssh/config: ssh_config

# TODO print output of these commands
# TODO do i want submodule update to be recursive? manually specify?
# TODO if already running w/ root permissions, maybe don't do user on last pip
# install line?
# TODO need to use git://? will that work w/ SSH key set later?
# TODO i kind of want stdout/err/in for all things. way to make it default?
- shell:
  - 
    description: "Getting accessory scripts repo"
    command: "./get_scripts.sh"
    stdout: True
    stderr: True
    stdin: True
  -
    description: "Running ~/src/scripts/movein.sh"
    command: "sudo ~/src/scripts/movein.sh"
    stdout: True
    stderr: True
    stdin: True
  - 
    description: "Installing YouCompleteMe"
    command: "sudo ./ycm_deps.sh && vim/bundle/YouCompleteMe/install.py"
    stdout: False
    stderr: True
    stdin: True
  - 
    description: "Installing requirements for GithubCloner"
    command: "pip3 install --user -r util/GithubCloner/requirements.txt"
    stdout: False
    stderr: True
    stdin: True
  - ./ui_settings.sh

